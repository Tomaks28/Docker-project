name: Deploy to Hades - Debian 12

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_PATH: "/Git/Docker-project"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          since_last_remote_commit: true
          separator: ","

      - name: copy file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_HADES_IP }}
          username: ${{ secrets.HOST_HADES_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: ${{ steps.changed-files.outputs.all_changed_files }}
          target: "/Git/Docker-project"

      # - name: Set up SSH
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Ensure proper permissions and create directories
      #   run: |
      #     # Connexion à Hades et création du dossier avec les bonnes permissions
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.HOST_HADES_USER }}@${{ secrets.HOST_HADES_IP }} "sudo mkdir -p ${DEPLOY_PATH} && sudo chown -R ${{ secrets.HOST_HADES_USER }}:${{ secrets.HOST_HADES_USER }} ${DEPLOY_PATH} && sudo chmod -R 775 ${DEPLOY_PATH}"

      # - name: Copy files to Debian server
      #   run: |
      #     scp -r ./ ${{ secrets.HOST_HADES_USER }}@${{ secrets.HOST_HADES_IP }}:/home/${{ secrets.HOST_HADES_USER }}/Git/Docker-project

      # - name: Deploy Docker container on Debian server
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.HOST_HADES_USER }}@${{ secrets.HOST_HADES_IP }} << 'EOF'
      #       # Naviguer vers le répertoire du projet
      #       cd /home/${{ secrets.HOST_HADES_USER }}/Git/Docker-project

      #       # Construire l'image Docker
      #       docker build -t my-server .

      #       # Lancer le conteneur Docker
      #       docker run -d -p 3000:3000 --name my-server-container my-server
      #     EOF
